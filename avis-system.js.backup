// SOLUTION RADICALE - SYST√àME D'AVIS COMPLET ET AUTONOME
(function() {
  'use strict';
  
  let selectedRating = 0;
  
  // Syst√®me d'avis local autonome
  function ajouterAvis(note, commentaire) {
    try {
      const user = window.currentUser ? window.currentUser() : null;
      if (!user || user.role !== 'member') {
        console.error('Utilisateur non autoris√©');
        return false;
      }
      
      const avis = {
        id: Date.now(),
        note: parseInt(note),
        commentaire: commentaire || '',
        date: new Date().toISOString().split('T')[0],
        timestamp: new Date().toISOString(),
        user: user.name || 'Anonyme'
      };
      
      let avisData = JSON.parse(localStorage.getItem('orif_avis') || '[]');
      avisData.unshift(avis);
      avisData = avisData.slice(0, 100); // Garder 100 derniers avis
      
      localStorage.setItem('orif_avis', JSON.stringify(avisData));
      console.log('‚úÖ Avis ajout√© avec succ√®s:', avis);
      return true;
    } catch (error) {
      console.error('‚ùå Erreur ajout avis:', error);
      return false;
    }
  }

  // Charger et afficher les avis
  function chargerAvis() {
    try {
      const avis = JSON.parse(localStorage.getItem('orif_avis') || '[]');
      const today = new Date().toISOString().split('T')[0];
      const avisAujourdhui = avis.filter(a => a.date === today);
      
      let moyenne = 0;
      if (avisAujourdhui.length > 0) {
        moyenne = avisAujourdhui.reduce((sum, a) => sum + a.note, 0) / avisAujourdhui.length;
      }
      
      // Mettre √† jour l'affichage
      const moyenneElement = document.getElementById('moyenne-avis');
      const nbAvisElement = document.getElementById('nb-avis');
      
      if (moyenneElement) {
        moyenneElement.textContent = moyenne > 0 ? moyenne.toFixed(1) : '--';
      }
      if (nbAvisElement) {
        nbAvisElement.textContent = avisAujourdhui.length;
      }
      
      console.log('üìä Avis charg√©s - Nombre:', avisAujourdhui.length, 'Moyenne:', moyenne.toFixed(1));
      return avisAujourdhui;
    } catch (error) {
      console.error('‚ùå Erreur chargement avis:', error);
      return [];
    }
  }

  // Gestion des √©toiles - SOLUTION RADICALE
  function highlightStars(rating) {
    const stars = document.querySelectorAll('#rating-popup .star');
    stars.forEach((star, index) => {
      star.style.color = index < rating ? '#ffcc00' : '#ddd';
      star.style.transition = 'color 0.2s';
    });
  }
  
  // SOLUTION RADICALE - Initialiser les √©toiles avec √©v√©nements directs
  function initializeStars() {
    const stars = document.querySelectorAll('#rating-popup .star');
    console.log('üîç √âtoiles trouv√©es:', stars.length);
    
    stars.forEach((star, index) => {
      const rating = index + 1;
      
      // FORCER les styles d'affichage
      star.style.cursor = 'pointer';
      star.style.fontSize = '28px';
      star.style.display = 'inline-block';
      star.style.margin = '0 5px';
      star.style.color = '#ddd';
      star.style.transition = 'color 0.2s, transform 0.1s';
      
      // √âV√âNEMENTS MULTIPLES pour garantir le fonctionnement
      
      // 1. onclick direct
      star.onclick = function(e) {
        e.preventDefault();
        e.stopPropagation();
        selectedRating = rating;
        highlightStars(rating);
        console.log('‚≠ê CLICK - Note s√©lectionn√©e:', rating);
      };
      
      // 2. addEventListener
      star.addEventListener('click', function(e) {
        e.preventDefault();
        selectedRating = rating;
        highlightStars(rating);
        console.log('‚≠ê EVENT - Note s√©lectionn√©e:', rating);
      });
      
      // 3. √âv√©nements hover
      star.addEventListener('mouseenter', function() {
        highlightStars(rating);
        star.style.transform = 'scale(1.1)';
      });
      
      star.addEventListener('mouseleave', function() {
        highlightStars(selectedRating);
        star.style.transform = 'scale(1)';
      });
      
      // 4. Touch pour mobile
      star.addEventListener('touchstart', function(e) {
        e.preventDefault();
        selectedRating = rating;
        highlightStars(rating);
        console.log('üì± TOUCH - Note s√©lectionn√©e:', rating);
      });
    });
    
    console.log('‚≠ê √âtoiles initialis√©es avec √©v√©nements multiples:', stars.length);
  }

  function updateStarsDisplay() {
    highlightStars(selectedRating);
  }

  // Fermer le popup
  function closePopup() {
    const popup = document.getElementById('rating-popup');
    if (popup) popup.style.display = 'none';
    selectedRating = 0;
    const commentField = document.getElementById('comment-popup');
    if (commentField) commentField.value = '';
    updateStarsDisplay();
    console.log('üîí Popup ferm√©');
  }

  // Ouvrir le popup
  function openRatingPopup() {
    console.log('üöÄ OUVERTURE POPUP D\'AVIS');
    
    const user = window.currentUser ? window.currentUser() : null;
    const popup = document.getElementById('rating-popup');
    const formPopup = document.getElementById('rating-form-popup');
    const loginPopup = document.getElementById('rating-login-popup');
    
    console.log('üéØ DEBUG - Utilisateur:', user);
    console.log('üéØ DEBUG - Popup trouv√©:', !!popup);
    console.log('üéØ DEBUG - Form popup trouv√©:', !!formPopup);
    console.log('üéØ DEBUG - Login popup trouv√©:', !!loginPopup);
    
    if (!popup) {
      console.error('‚ùå Popup rating-popup introuvable');
      return;
    }

    // Ouvrir le popup dans tous les cas
    popup.style.display = 'flex';
    
    if (user && user.role === 'member') {
      console.log(`‚úÖ Utilisateur membre autoris√©: ${user.name}`);
      if (formPopup) formPopup.style.display = 'block';
      if (loginPopup) loginPopup.style.display = 'none';
      selectedRating = 0;
      
      // FORCE D'INITIALISATION COMPL√àTE - D√âLAI MULTIPLE
      setTimeout(() => {
        initializeStars();
        highlightStars(0);
        
        // Assurer l'affichage des √©l√©ments
        const commentArea = document.getElementById('comment-popup');
        const submitBtn = document.getElementById('submit-rating-popup');
        
        if (commentArea) {
          commentArea.style.display = 'block';
          commentArea.style.visibility = 'visible';
          commentArea.value = '';
        }
        if (submitBtn) {
          submitBtn.style.display = 'inline-block';
          submitBtn.style.visibility = 'visible';
        }
        
        console.log('üéØ Popup totalement initialis√© avec √©toiles actives');
        
        // SECONDE INITIALISATION pour √™tre s√ªr
        setTimeout(() => {
          initializeStars();
          console.log('üîÑ Seconde initialisation des √©toiles');
        }, 200);
        
      }, 50);
      
    } else {
      console.log('‚ùå Connexion requise - Affichage formulaire de connexion');
      if (formPopup) formPopup.style.display = 'none';
      if (loginPopup) loginPopup.style.display = 'block';
    }
    
    const commentField = document.getElementById('comment-popup');
    if (commentField) commentField.value = '';
    
    console.log('‚úÖ Popup ouvert avec succ√®s');
  }

  // Soumettre un avis
  function submitRating() {
    console.log('üìù SOUMISSION AVIS - Note:', selectedRating);
    
    if (selectedRating === 0) {
      alert('Veuillez s√©lectionner une note avant d\'envoyer votre avis.');
      return;
    }

    const commentField = document.getElementById('comment-popup');
    const comment = commentField ? commentField.value.trim() : '';
    
    const success = ajouterAvis(selectedRating, comment);
    
    if (success) {
      alert('Merci pour votre avis !');
      closePopup();
      chargerAvis(); // Recharger l'affichage
    } else {
      alert('Erreur lors de l\'enregistrement de votre avis. V√©rifiez que vous √™tes bien connect√©.');
    }
  }

  // Initialisation compl√®te
  function init() {
    console.log('üîß INITIALISATION SYST√àME D\'AVIS AUTONOME');
    
    // Charger les avis existants
    chargerAvis();
    
    // Attacher le bouton principal - SOLUTION TRIPLE S√âCURIT√â
    const openBtn = document.getElementById('open-rating-popup');
    console.log('üéØ DEBUG: Bouton trouv√©:', openBtn);
    
    if (openBtn) {
      // Nettoyer tous les √©v√©nements existants
      openBtn.onclick = null;
      openBtn.removeEventListener('click', openRatingPopup);
      
      // TRIPLE ATTACHEMENT pour garantir le fonctionnement
      
      // 1. onclick direct
      openBtn.onclick = function(e) {
        e.preventDefault();
        e.stopPropagation();
        console.log('üî• ONCLICK - Bouton Donner mon avis');
        openRatingPopup();
        return false;
      };
      
      // 2. addEventListener
      openBtn.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        console.log('üî• EVENTLISTENER - Bouton Donner mon avis');
        openRatingPopup();
        return false;
      });
      
      // 3. Attribute onclick en dur
      openBtn.setAttribute('onclick', 'console.log("üî• ATTRIBUT - Clic d√©tect√©"); window.avisSys.openPopup(); return false;');
      
      console.log('‚úÖ Bouton "Donner mon avis" attach√© TRIPLE S√âCURIT√â');
    } else {
      console.error('‚ùå Bouton "open-rating-popup" introuvable');
    }

    // Boutons de fermeture
    const closeBtn = document.getElementById('close-rating-popup');
    const cancelBtn = document.getElementById('cancel-rating-popup');
    const cancelLoginBtn = document.getElementById('cancel-login-popup');
    
    if (closeBtn) closeBtn.onclick = closePopup;
    if (cancelBtn) cancelBtn.onclick = closePopup;
    if (cancelLoginBtn) cancelLoginBtn.onclick = closePopup;

    // Fermeture par clic sur overlay
    const popup = document.getElementById('rating-popup');
    if (popup) {
      popup.onclick = function(e) {
        if (e.target === popup) closePopup();
      };
    }

    // Gestion des √©toiles
    const stars = document.querySelectorAll('#rating-popup .star');
    stars.forEach((star, index) => {
      star.onclick = function() {
        selectedRating = index + 1;
        updateStarsDisplay();
        console.log('‚≠ê √âtoile s√©lectionn√©e:', selectedRating);
      };
      
      star.onmouseover = function() {
        highlightStars(index + 1);
      };
      
      star.onmouseout = function() {
        updateStarsDisplay();
      };
      
      // Am√©liorer le style
      star.style.cursor = 'pointer';
      star.style.userSelect = 'none';
    });

    // Bouton de soumission
    const submitBtn = document.getElementById('submit-rating-popup');
    if (submitBtn) {
      submitBtn.onclick = submitRating;
      console.log('‚úÖ Bouton de soumission attach√©');
    }

    console.log('üéâ Syst√®me d\'avis initialis√© avec succ√®s');
  }

  // Attendre le DOM et les autres scripts
  function waitAndInit() {
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', function() {
        setTimeout(init, 500); // D√©lai pour les autres scripts
      });
    } else {
      setTimeout(init, 500);
    }
  }

  // Exposer les fonctions globalement - ACC√àS DIRECT
  window.avisSys = {
    ajouterAvis: ajouterAvis,
    chargerAvis: chargerAvis,
    openPopup: openRatingPopup,
    closePopup: closePopup
  };
  
  // Exposition directe pour debug
  window.openRatingPopup = openRatingPopup;
  window.closeRatingPopup = closePopup;

  // D√©marrer l'initialisation
  waitAndInit();

})();